# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import ChaveValor_pb2 as ChaveValor__pb2


class ChaveValorStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Insercao = channel.unary_unary(
                '/ChaveValor/Insercao',
                request_serializer=ChaveValor__pb2.Pedido.SerializeToString,
                response_deserializer=ChaveValor__pb2.RespostaInsercao.FromString,
                )
        self.Consulta = channel.unary_unary(
                '/ChaveValor/Consulta',
                request_serializer=ChaveValor__pb2.Pedido.SerializeToString,
                response_deserializer=ChaveValor__pb2.RespostaConsulta.FromString,
                )
        self.Ativacao = channel.unary_unary(
                '/ChaveValor/Ativacao',
                request_serializer=ChaveValor__pb2.Pedido.SerializeToString,
                response_deserializer=ChaveValor__pb2.RespostaAtivacao.FromString,
                )
        self.Termino = channel.unary_unary(
                '/ChaveValor/Termino',
                request_serializer=ChaveValor__pb2.Pedido.SerializeToString,
                response_deserializer=ChaveValor__pb2.RespostaTermino.FromString,
                )


class ChaveValorServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Insercao(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Consulta(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Ativacao(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Termino(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChaveValorServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Insercao': grpc.unary_unary_rpc_method_handler(
                    servicer.Insercao,
                    request_deserializer=ChaveValor__pb2.Pedido.FromString,
                    response_serializer=ChaveValor__pb2.RespostaInsercao.SerializeToString,
            ),
            'Consulta': grpc.unary_unary_rpc_method_handler(
                    servicer.Consulta,
                    request_deserializer=ChaveValor__pb2.Pedido.FromString,
                    response_serializer=ChaveValor__pb2.RespostaConsulta.SerializeToString,
            ),
            'Ativacao': grpc.unary_unary_rpc_method_handler(
                    servicer.Ativacao,
                    request_deserializer=ChaveValor__pb2.Pedido.FromString,
                    response_serializer=ChaveValor__pb2.RespostaAtivacao.SerializeToString,
            ),
            'Termino': grpc.unary_unary_rpc_method_handler(
                    servicer.Termino,
                    request_deserializer=ChaveValor__pb2.Pedido.FromString,
                    response_serializer=ChaveValor__pb2.RespostaTermino.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ChaveValor', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ChaveValor(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Insercao(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ChaveValor/Insercao',
            ChaveValor__pb2.Pedido.SerializeToString,
            ChaveValor__pb2.RespostaInsercao.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Consulta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ChaveValor/Consulta',
            ChaveValor__pb2.Pedido.SerializeToString,
            ChaveValor__pb2.RespostaConsulta.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Ativacao(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ChaveValor/Ativacao',
            ChaveValor__pb2.Pedido.SerializeToString,
            ChaveValor__pb2.RespostaAtivacao.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Termino(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ChaveValor/Termino',
            ChaveValor__pb2.Pedido.SerializeToString,
            ChaveValor__pb2.RespostaTermino.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ServidorCentralStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Registro = channel.unary_unary(
                '/ServidorCentral/Registro',
                request_serializer=ChaveValor__pb2.PedidoRegistro.SerializeToString,
                response_deserializer=ChaveValor__pb2.RespostaRegistro.FromString,
                )
        self.Mapeamento = channel.unary_unary(
                '/ServidorCentral/Mapeamento',
                request_serializer=ChaveValor__pb2.Pedido.SerializeToString,
                response_deserializer=ChaveValor__pb2.RespostaMap.FromString,
                )
        self.Termino = channel.unary_unary(
                '/ServidorCentral/Termino',
                request_serializer=ChaveValor__pb2.Pedido.SerializeToString,
                response_deserializer=ChaveValor__pb2.RespostaTermino.FromString,
                )


class ServidorCentralServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Registro(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Mapeamento(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Termino(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServidorCentralServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Registro': grpc.unary_unary_rpc_method_handler(
                    servicer.Registro,
                    request_deserializer=ChaveValor__pb2.PedidoRegistro.FromString,
                    response_serializer=ChaveValor__pb2.RespostaRegistro.SerializeToString,
            ),
            'Mapeamento': grpc.unary_unary_rpc_method_handler(
                    servicer.Mapeamento,
                    request_deserializer=ChaveValor__pb2.Pedido.FromString,
                    response_serializer=ChaveValor__pb2.RespostaMap.SerializeToString,
            ),
            'Termino': grpc.unary_unary_rpc_method_handler(
                    servicer.Termino,
                    request_deserializer=ChaveValor__pb2.Pedido.FromString,
                    response_serializer=ChaveValor__pb2.RespostaTermino.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ServidorCentral', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ServidorCentral(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Registro(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ServidorCentral/Registro',
            ChaveValor__pb2.PedidoRegistro.SerializeToString,
            ChaveValor__pb2.RespostaRegistro.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Mapeamento(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ServidorCentral/Mapeamento',
            ChaveValor__pb2.Pedido.SerializeToString,
            ChaveValor__pb2.RespostaMap.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Termino(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ServidorCentral/Termino',
            ChaveValor__pb2.Pedido.SerializeToString,
            ChaveValor__pb2.RespostaTermino.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
